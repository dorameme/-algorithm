/*
2022-09-20
start: 10:41
end:11:41
point-> 시뮬레이션 문제 애먹었던건... 아이디어(10%) + x,y축 구분하는거!! 평소에 x를 행에 두는데 이문제는 x가 열에있어서 혼돈했다!
*/

#include <vector>
#include <map>
#include <iostream>
#include <algorithm>
#include <queue>
#include <set>
#include <vector>
#include <cstring>
#define X first
#define Y second
using namespace std;
int N;
int arr[101][101][20];
int board[101][101];
int new_board[101][101];
vector<pair<int, int>> v;
vector<pair<int, int>>new_v;
pair<int, int> turn(int x,int y){
	return { y,-x };
}
void make_dragon(int x,int y,int g) {//x,y 기준으로 돌림
	if (g == 0)return;
	for (auto& p : v) {
		new_v.push_back(p);
	}
	pair<int, int> cur;
	int cnt = 0;
	for (int i = v.size() - 2; i >= 0; i--) {
		cur = turn(v[i].X - x, v[i].Y - y);
	new_v.push_back({ cur.X + x,cur.Y + y });
	}
	v.clear();
	for (auto& p : new_v) {
		v.push_back(p);
	}
	new_v.clear();
	make_dragon(cur.X + x, cur.Y + y, g - 1);
}
int main(){
	cin >> N;
	int x, y, d, g;
	while (N--) {
		cin >> y >> x >> d >> g;
		v.clear();
		new_v.clear();
		if (d == 0) {
			v.push_back({ x, y });
			v.push_back({ x,y+1});///이름이 혼용되었지만... COL==X축
			make_dragon(v.back().X, v.back().Y, g);
			for (auto& p : v) {
				board[p.X][p.Y] = 1;
			}
		}
		else if (d == 1) {
			v.push_back({ x, y });
			v.push_back({ x-1,y });
			make_dragon(v.back().X, v.back().Y, g);
			for (auto& p : v) {
				board[p.X][p.Y] = 1;
			}
		}
		else if (d == 2) {
			v.push_back({ x, y });
			v.push_back({ x,y-1 });
			make_dragon(v.back().X, v.back().Y, g);
			for (auto& p : v) {
				board[p.X][p.Y] = 1;
			}
		}
		else if (d == 3) {
			v.push_back({ x, y });
			v.push_back({ x+1,y  });
			make_dragon(v.back().X, v.back().Y, g);
			for (auto& p : v) {
				board[p.X][p.Y] = 1;
			}
		}
	}
	int answer = 0;
	for (int i = 0; i <= 99; i++) {
		for (int j = 0; j <= 99; j++) {
		if (board[i][j] == 1 && board[i + 1][j] == 1 && board[i][j + 1] == 1 && board[i + 1][j + 1] == 1) answer++;//이어서 못슴?
		}
	}cout << answer;
}
