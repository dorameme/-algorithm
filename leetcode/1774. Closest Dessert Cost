class Solution {
public:
    int answer=987654321;
    void backtrack(int base, vector<int>& toppingCosts,int topping,int howmuch){
        if(abs(base-howmuch)==abs(answer)&&answer>0&&base-howmuch<0){
            answer=-answer;
        }
        if(abs(base-howmuch)<abs(answer)){
            answer=base-howmuch;
        }
        if(base-howmuch>abs(answer))return;
        if(toppingCosts.size()<=topping){
            return;
        }
        backtrack(base+toppingCosts[topping]*2,toppingCosts,topping+1,howmuch);
        backtrack(base+toppingCosts[topping]*1,toppingCosts,topping+1,howmuch);
        backtrack(base+toppingCosts[topping]*0,toppingCosts,topping+1,howmuch);
        
    }

    int closestCost(vector<int>& baseCosts, vector<int>& toppingCosts, int target) {
           for(int i=0;i<baseCosts.size();i++){
                backtrack(baseCosts[i]+toppingCosts[0]*2,toppingCosts,1,target);
                backtrack(baseCosts[i]+toppingCosts[0]*1,toppingCosts,1,target);
                backtrack(baseCosts[i]+toppingCosts[0]*0,toppingCosts,1,target);
        }
        return answer+target;
    }
};
