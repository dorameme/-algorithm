/*
2022-09-12
start:20:27
end:21:33
point->
쉬웠는데 함수하나에 값을 잘못넣어서 틀렸다.
간단한 구현문제였다.
시간복잡도:O(N)
*/
#include <string>
#include <vector>
#include <iostream>
#include <map>
#include <algorithm>
#include <sstream>
#include <cmath>
using namespace std;
//8:27~9:33
map<string ,int> parking;
map<string,int>total;
map<string,int> time_used;
int money(int time,vector<int>& fees){
    if(time-fees[0]<=0){return fees[1];}
    else{
        int plus_alpa=(time-fees[0])%fees[2]?fees[3]:0;//나누어 떨어지지 않을 시 돈을 올림해 더받음.
       return fees[1]+(time-fees[0])/fees[2]*fees[3]+ plus_alpa;
    }
}
int changeToTime(string num){
    int hour=10*(num[0]-'0')+num[1]-'0';
    int minute=10*(num[3]-'0')+num[4]-'0';
    int used_time=hour*60+minute;
    return used_time;
}
vector<int> solution(vector<int> fees, vector<string> records) {
    vector<int> answer;
    for(int i=0;i<records.size();i++){
        string first,second,third;
        stringstream ss(records[i]);
        ss >> first >> second >> third;
        
        if(parking.find(second)==parking.end())//값이 없으면
        {
           parking[second]=changeToTime(first);
        }
        else{
           time_used[second]+=abs(parking[second]-changeToTime(first));
            parking.erase(second);
        }
    }
    for(auto a:parking){//&?
        time_used[a.first]+=(23*60+59-a.second);
    }
    for(auto a:time_used){
        answer.push_back(money(a.second,fees));
    }
    return answer;
}
